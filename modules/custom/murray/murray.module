<?php

/**
 * Implements hook_block_info().
 */
function murray_block_info() {
  $blocks = array();
  
  $blocks['get-thumbnails'] = array(
    'info' => t('Thubmails'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['get-slideshow'] = array(
    'info' => t('Slideshow on Front'),
    'cache' => DRUPAL_NO_CACHE,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function murray_block_view($delta) {
  switch ($delta) {
    case 'get-thumbnails':
      return array(
        'subject' => t('Thubmails'),
        'content' => murray_get_thumbnails(),
      );
      break;
    case 'get-slideshow':
      return array(
        'subject' => t('Slideshow on Front'),
        'content' => murray_get_slideshow(),
      );
      break;
  }
}

function murray_menu() 
{
   $items['murray_thumbnail/%'] = array(
        'title' => 'Home',
        'page callback' => 'get_project_id',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
   );


    return $items;
}

function get_project_id($tax_name = 'none') {
   
   $type_id = 0;
    
   $pdata = db_query("SELECT d.tid as id, d.name FROM {taxonomy_vocabulary} v inner join {taxonomy_term_data} d on v.vid = d.vid WHERE v.machine_name = :v_name and d.name = :tax_name order by name ", array(
          ':v_name' => 'project_type',
          ':tax_name' => $tax_name,
          ));
          
   foreach($pdata as $p) {
          $type_id = $p->id;
   }
   
   print $type_id;
   
   //return $type_id;
   
    
}

function get_project_info($tax_name = 'none'){
    
    global $base_url;
    
    $file_direcoty_path = '/' . file_stream_wrapper_get_instance_by_uri('public://')->getDirectoryPath();
    
    $output = "<ul>";
    
    $type_id = 0;
    
    $pdata = db_query("SELECT d.tid as id, d.name FROM {taxonomy_vocabulary} v inner join {taxonomy_term_data} d on v.vid = d.vid WHERE v.machine_name = :v_name and d.name = :tax_name order by name ", array(
          ':v_name' => 'project_type',
          ':tax_name' => $tax_name,
          ));
          
     foreach($pdata as $p) {
            $type_id = $p->id;
     }
     
     
    
    $result = db_query("
            SELECT node.title AS node_title, node.nid AS nid, nodequeue_nodes_node.position AS nodequeue_nodes_node_position
            FROM 
            {node} node
            INNER JOIN {nodequeue_nodes} nodequeue_nodes_node ON node.nid = nodequeue_nodes_node.nid AND nodequeue_nodes_node.qid = '1'
            LEFT JOIN {field_data_field_project_type} field_data_field_project_type ON node.nid = field_data_field_project_type.entity_id AND (field_data_field_project_type.entity_type = 'node' AND field_data_field_project_type.deleted = '0')
            WHERE (( (node.status = '1') AND (node.type IN  ('project')) AND (field_data_field_project_type.field_project_type_tid = :type_id ) ))
            ORDER BY nodequeue_nodes_node_position ASC ", array(
            ':type_id' => $type_id,
            ));
    
    foreach($result as $node_item){
        $node = node_load($node_item->nid);
        
        $media = $node->field_media;
        
        $first_image = array();
        foreach($media as $value){
            if(!empty($value)){
              $first_image = $value[0];  
              break;
            }
        }
        
        //Get File info.
        if(!empty($first_image)) {
            $file = db_query("Select * from {file_managed} Where fid = :fid",array(
            ':fid' => $first_image['fid']
            ));
            
            foreach($file as $file_item){
                $style_thumbnail = image_style_load('square_thumbnail');
                image_style_create_derivative($style_thumbnail, $file_item->uri, file_default_scheme() . '://styles/square_thumbnail/public/' . $file_item->filename);
                $output.= '<li><a href="' . url('node/'.$node_item->nid) . '" class="thumb_nail"><img src="' . $base_url . $file_direcoty_path . '/styles/square_thumbnail/public/' . $file_item->filename . '" alt=""></a></li>';
            }    
        }    
        
        
    }
    
    //print $output ."</ul>";
    
    $output .= "</ul>";
    
    if($output == "<ul></ul>") $output = "";
    
    return $output;
    
    
    //exit(0);
    
    //return serialize($output);
    
}

function get_project_slide_info($tax_name = 'none'){
    
    global $base_url;
    
    $file_direcoty_path = '/' . file_stream_wrapper_get_instance_by_uri('public://')->getDirectoryPath();
    
    $output = "<ul>";
    
    $type_id = 0;
    
    $pdata = db_query("SELECT d.tid as id, d.name FROM {taxonomy_vocabulary} v inner join {taxonomy_term_data} d on v.vid = d.vid WHERE v.machine_name = :v_name and d.name = :tax_name order by name ", array(
          ':v_name' => 'project_type',
          ':tax_name' => $tax_name,
          ));
          
     foreach($pdata as $p) {
            $type_id = $p->id;
     }
     
     
    
    $result = db_query("
            SELECT node.title AS node_title, node.nid AS nid, nodequeue_nodes_node.position AS nodequeue_nodes_node_position
            FROM 
            {node} node
            INNER JOIN {nodequeue_nodes} nodequeue_nodes_node ON node.nid = nodequeue_nodes_node.nid AND nodequeue_nodes_node.qid = '1'
            LEFT JOIN {field_data_field_project_type} field_data_field_project_type ON node.nid = field_data_field_project_type.entity_id AND (field_data_field_project_type.entity_type = 'node' AND field_data_field_project_type.deleted = '0')
            WHERE (( (node.status = '1') AND (node.type IN  ('project')) AND (field_data_field_project_type.field_project_type_tid = :type_id ) ))
            ORDER BY nodequeue_nodes_node_position ASC ", array(
            ':type_id' => $type_id,
            ));
    
    foreach($result as $node_item){
        $node = node_load($node_item->nid);
        
         $title = $node->title;
         
         $date_info ="";
         foreach($node->field_date as $value){
            foreach($value as $item){
                $date = $item['value'];
                $date_info .= $date; 
            }   
            
          }
        
        
        
        $media = $node->field_media;
        
        $first_image = array();
        foreach($media as $value){
            if(!empty($value)){
              $first_image = $value[0];  
              break;
            }
        }
        
        //Get File info.
        if(!empty($first_image)) {
            $file = db_query("Select * from {file_managed} Where fid = :fid",array(
            ':fid' => $first_image['fid']
            ));
            
            $index = 0;
            foreach($file as $file_item){
                $index++;
                $style_thumbnail = image_style_load('large');
                image_style_create_derivative($style_thumbnail, $file_item->uri, file_default_scheme() . '://styles/large/public/' . $file_item->filename);
                
                $catption_value = "";
                
                 if($index == 1){
                    $output .= '<li class="active"><a href="'. url("node/".$node->nid) .'"><img src="' . $base_url . $file_direcoty_path . '/styles/large/public/' . $file_item->filename . '" title="'. $catption_value . '"></a>';
                    //$output .= '<div class="detail-info">' . '<p><a href="'. url("node/".$node->nid) .'">' . $title . '</a></p><p><a href="'. url("node/".$node->nid) .'">' . $date_info . '</a></p>' . '</div>';
                    $output .= '<div class="detail-info">' . '<h2><a href="'. url("node/".$node->nid) .'">' . $title . '</a></h2><div class="meta">' . $date_info . '</div>' . '</div>';
                    $output .= '</li>';
                 }
                 else{
                    $output .= '<li ><a href="'. url("node/".$node->nid) .'"><img src="' . $base_url . $file_direcoty_path . '//styles/large/public/' . $file_item->filename . '" title="'. $catption_value . '">';
                    $output .= '<div class="detail-info">' . '<h2><a href="'. url("node/".$node->nid) .'">' . $title . '</a></h2><div class="meta">' . $date_info . '</div>' . '</div>';
                    $output .= '</li>'; 
                 }
                    
            }    
        }    
        
        
    }
    
    //print $output ."</ul>";
    
    $output .= "</ul>";
    
    if($output == "<ul></ul>") $output = "";
    
    return $output;
    
    
    //exit(0);
    
    //return serialize($output);
    
}

function murray_get_thumbnails() {
    $output = "";
    
    $pdata = db_query("SELECT d.tid as id, d.name FROM {taxonomy_vocabulary} v inner join {taxonomy_term_data} d on v.vid = d.vid WHERE v.machine_name = :name order by name ", array(
          ':name' => 'project_type',
          ));
    foreach($pdata as $term_data){
        $tid = $term_data->id;
        
        $path = drupal_get_path_alias("taxonomy/term/" . $tid);
        
        $path = explode("/",$path);        
        //exit(0);
        $term_name = $term_data->name;
        $output .= '<div id="works-'.$path[count($path)-1].'" class="menu secondary">';
        $output .= get_project_info($term_name);
        $output .= '</div>';
    }
    
    return $output;
}

function murray_get_slideshow() {
    $output = "";
    
    $pdata = db_query("SELECT d.tid as id, d.name FROM {taxonomy_vocabulary} v inner join {taxonomy_term_data} d on v.vid = d.vid WHERE v.machine_name = :name order by name ", array(
          ':name' => 'project_type',
          ));
    foreach($pdata as $term_data){
        $tid = $term_data->id;
        
        $path = drupal_get_path_alias("taxonomy/term/" . $tid);
        
        $path = explode("/",$path);        
        //exit(0);
        $term_name = $term_data->name;
        
        $output .= get_project_slide_info($term_name);
        
    }
    
    return $output;
}




















